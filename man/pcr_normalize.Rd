% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helper_fun.R
\name{pcr_normalize}
\alias{pcr_normalize}
\title{Normalize values by a column}
\usage{
pcr_normalize(df, reference_gene, mode = "subtract", tidy = FALSE)
}
\arguments{
\item{df}{A data.frame}

\item{reference_gene}{A character string of the name of the column
corresponding to the reference gene}

\item{mode}{A character string of the normalization mode to be used. Default
is 'subtract'. Other possible modes include 'divide'}

\item{tidy}{A logical, default FALSE. When TRUE returns a tidy data.frame}
}
\value{
A data.frame with a column for each of the original columns after
subtraction or division to a reference_gene/column which is dropped.
The function returns ignores non numeric columns. When tidy is TRUE the
returns a tidy data.frame with the columns: gene and average as
well as any non numeric columns such as a grouping variable group/amount.
}
\description{
Uses subtraction or division to normalize values in all columns to a certain
specified column
}
\details{
Used to normalize ct or input amounts (or their averages) by a
a reference_gene/column
}
\examples{
# locate and read raw ct data
fl <- system.file('extdata', 'ct1.csv', package = 'pcr')
ct1 <- readr::read_csv(fl)

# normalize the ct values
pcr_normalize(ct1, reference_gene = 'GAPDH')

# normalize by division
pcr_normalize(ct1, reference_gene = 'GAPDH', mode = 'divide')

# add grouping variable and average first
group_var <- rep(c('brain', 'kidney'), each = 6)
ave <- pcr_average(ct1, group_var = group_var)

# normalize by subtraction
pcr_normalize(ave, 'GAPDH')

# normalize by division
pcr_normalize(ave, 'GAPDH', mode = 'divide')

}
